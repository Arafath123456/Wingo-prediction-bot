def generate_response(period_number: str, color: str, size: str, confidence: float) -> str:
    """Format prediction response"""
    return (
        f"üéØ Next Period: #{period_number}\n\n"
        f"‚úÖ Predicted Color: {color}\n"
        f"‚úÖ Predicted Size: {size}\n"
        f"‚ö°Ô∏è Confidence: {confidence:.1f}%\n\n"
        "‚ö†Ô∏è Note: Predictions are probabilistic. Gamble responsibly."
    )

def history_response() -> str:
    """Format history response"""
    # TODO: Replace with actual data from DB
    return (
        "üìú Recent Predictions:\n\n"
        "1. #20240729041: üî¥ Red | Big (Confidence: 76.2%)\n"
        "   ‚úÖ Actual: Red | Big\n\n"
        "2. #20240729040: üü¢ Green | Small (Confidence: 68.9%)\n"
        "   ‚ùå Actual: Violet | Big\n\n"
        "3. #20240729039: üîµ Violet | Small (Confidence: 82.1%)\n"
        "   ‚úÖ Actual: Violet | Small\n\n"
        "Last updated: 2024-07-29 14:30 UTC"
    )

def stats_response() -> str:
    """Format stats response"""
    # TODO: Replace with actual stats
    return (
        "üìä Bot Performance Stats:\n\n"
        "‚Ä¢ Overall Accuracy: 74.3%\n"
        "‚Ä¢ Color Accuracy: 76.8%\n"
        "‚Ä¢ Size Accuracy: 71.9%\n"
        "‚Ä¢ Last 50 Rounds: 79.2%\n\n"
        "‚è± Last Prediction: 2024-07-29 14:31 UTC\n"
        "üîÑ Predictions Made: 1,243"
    )

def help_response() -> str:
    """Format help response"""
    return (
        "‚ÑπÔ∏è *WinGo 30s Bot Help*\n\n"
        "*/start* - Initialize the bot\n"
        "*/generate* - Get next prediction\n"
        "*/history* - Show recent predictions\n"
        "*/stats* - View accuracy statistics\n"
        "*/help* - Show this message\n\n"
        "üîí *Access Control*\n"
        "This bot is restricted to authorized users only. Contact @AdminUser to request access.\n\n"
        "‚öôÔ∏è *How It Works*\n"
        "1. I analyze the last 500 rounds\n"
        "2. Use AI models to detect patterns\n"
        "3. Predict the next color/size combination\n"
        "4. Update every 30 seconds with new data\n\n"
        "‚ö†Ô∏è *Disclaimer*\n"
        "Predictions are probabilistic estimates. Past performance doesn't guarantee future results. Gamble responsibly."
    )

def format_history_response(history: list) -> str:
    """Format history response from database records"""
    lines = []
    for i, record in enumerate(history, 1):
        color_emoji = "üü¢" if record.predicted_color == "Green" else "üî¥" if record.predicted_color == "Red" else "üîµ"
        status = ""
        
        if record.actual_color:
            color_match = "‚úÖ" if record.predicted_color == record.actual_color else "‚ùå"
            size_match = "‚úÖ" if record.predicted_size == record.actual_size else "‚ùå"
            status = f"\n   {color_match} Color | {size_match} Size | Actual: {record.actual_color} | {record.actual_size}"
        
        lines.append(
            f"{i}. #{record.issue_number}: {color_emoji} {record.predicted_color} | "
            f"{record.predicted_size} (Confidence: {record.confidence:.1f}%){status}"
        )
    
    return "üìú Recent Predictions:\n\n" + "\n\n".join(lines)

def format_stats_response(stats: dict) -> str:
    """Format stats response from statistics"""
    return (
        f"üìä Bot Performance Stats:\n\n"
        f"‚Ä¢ Overall Accuracy: {stats['overall_accuracy']:.1f}%\n"
        f"‚Ä¢ Color Accuracy: {stats['color_accuracy']:.1f}%\n"
        f"‚Ä¢ Size Accuracy: {stats['size_accuracy']:.1f}%\n"
        f"‚Ä¢ Recent Accuracy (Last 50): {stats['recent_accuracy']:.1f}%\n"
        f"‚Ä¢ Total Predictions: {stats['total_predictions']}\n"
        f"‚Ä¢ Correct Predictions: {stats['correct_predictions']}\n\n"
        f"‚è± Last Prediction: {stats['last_prediction']}"
    )